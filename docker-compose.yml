networks:
  network:
    driver: bridge
    name: hub

services:
  proxy:
    container_name: proxy
    image: nginx:1.17.8
    restart: always
    depends_on:
      - app

    volumes:

      - ./docker/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/etc/nginx/snippets/snakeoil.conf:/etc/nginx/snippets/ssl.conf
      - ./docker/etc/nginx/snakeoil:/etc/nginx/snakeoil
      - ./docker/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/etc/nginx/snippets/server_ssl_app.conf:/etc/nginx/snippets/server_ssl_app.conf
      - ./docker/etc/nginx/snippets/server_websocket.conf:/etc/nginx/snippets/server_websocket.conf
      - ./docker/var/logs:/var/log
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    ports:
      - ${BIND_HOST}:${BIND_PORT}:80
      - ${BIND_HOST}:${BIND_SPORT}:443
      - ${BIND_HOST}:${BIND_WPORT}:29000
    networks:
      - network
    command: >
      sh -c "mkdir -p /var/run/nginx && 
             rm -f /var/run/nginx/nginx.pid &&
             rm -rf /var/log/nginx/* &&
             while :; do sleep 6h & wait $${!}; nginx -s reload; done & 
             nginx -g 'daemon off;'"
  app:
    build:
      context: ./application
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      - db
    environment:
      - TZ=Europe/Berlin
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_PORT=3306
      - APACHE_RUN_USER=#${RUN_UID}
      - APACHE_RUN_GROUP=#${RUN_GID}
      - USER_ID=${RUN_UID}
      - GROUP_ID=${RUN_GID}
      - APACHE_LOG_DIR=/var/log/apache2
    volumes:
      - ./application/app:/app
      - ./docker/etc/passwd:/etc/passwd:ro
      - ./docker/etc/group:/etc/group:ro
      - ./docker/var/logs:/var/log
    command: >
      sh -c "rm -rf /var/log/apache2/* && apache2-foreground -c 'ServerName localhost'"
    networks:
      - network
  db:
    container_name: db
    image: mariadb:10.3
    ports:
      - 127.0.0.1:${MYSQL_LOCAL_PORT}:3306
    networks:
      - network
    volumes:
      - ./docker/etc/mysql/my.cnf:/etc/mysql/my.cnf
      - db-storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-"r00t"}
      - MYSQL_USER=${MYSQL_USERNAME:-app}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-4pp}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-app}

volumes:
  db-storage:
    name: ia-app-db-storage